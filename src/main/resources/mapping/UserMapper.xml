<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.jstu.myoffice.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.jstu.myoffice.model.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="birth" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="idcard" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="departmentId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="departmentName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="stationId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="stationName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="employDate" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="workDate" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="form" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="source" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="politics" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="folk" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="nation" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="height" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="blood" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="homeplace" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="seat" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="eduback" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="eduDegree" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="graSchool" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="speciality" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="graDate" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="tag" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, sex, birth, idcard, departmentId, departmentName, stationId, stationName, 
    employDate, workDate, form, source, politics, folk, nation, phone, email, height, 
    blood, status, homeplace, seat, eduback, eduDegree, graSchool, speciality, graDate,
    tag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neuedu.jstu.myoffice.model.User">
    insert into employee (id, name, sex, 
      birth, idcard, departmentId, 
      departmentName, stationId, stationName, 
      employDate, workDate, form, 
      source, politics, folk, 
      nation, phone, email, 
      height, blood, status, 
      homeplace, seat, eduback,
      eduDegree, graSchool, speciality, 
      graDate, tag)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{birth,jdbcType=DATE}, #{idcard,jdbcType=VARCHAR}, #{departmentid,jdbcType=INTEGER}, 
      #{departmentname,jdbcType=VARCHAR}, #{stationid,jdbcType=INTEGER}, #{stationname,jdbcType=VARCHAR}, 
      #{employdate,jdbcType=DATE}, #{workdate,jdbcType=DATE}, #{form,jdbcType=INTEGER}, 
      #{source,jdbcType=VARCHAR}, #{politics,jdbcType=VARCHAR}, #{folk,jdbcType=VARCHAR}, 
      #{nation,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{height,jdbcType=VARCHAR}, #{blood,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{homeplace,jdbcType=VARCHAR}, #{seat,jdbcType=VARCHAR}, #{eduback,jdbcType=VARCHAR}, 
      #{edudegree,jdbcType=VARCHAR}, #{graschool,jdbcType=VARCHAR}, #{speciality,jdbcType=VARCHAR}, 
      #{gradate,jdbcType=DATE}, #{tag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.jstu.myoffice.model.User">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="departmentid != null">
        departmentId,
      </if>
      <if test="departmentname != null">
        departmentName,
      </if>
      <if test="stationid != null">
        stationId,
      </if>
      <if test="stationname != null">
        stationName,
      </if>
      <if test="employdate != null">
        employDate,
      </if>
      <if test="workdate != null">
        workDate,
      </if>
      <if test="form != null">
        form,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="politics != null">
        politics,
      </if>
      <if test="folk != null">
        folk,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="blood != null">
        blood,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="homeplace != null">
        homeplace,
      </if>
      <if test="seat != null">
        seat,
      </if>
      <if test="eduback != null">
        eduback,
      </if>
      <if test="edudegree != null">
        eduDegree,
      </if>
      <if test="graschool != null">
        graSchool,
      </if>
      <if test="speciality != null">
        speciality,
      </if>
      <if test="gradate != null">
        graDate,
      </if>
      <if test="tag != null">
        tag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="departmentname != null">
        #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="stationid != null">
        #{stationid,jdbcType=INTEGER},
      </if>
      <if test="stationname != null">
        #{stationname,jdbcType=VARCHAR},
      </if>
      <if test="employdate != null">
        #{employdate,jdbcType=DATE},
      </if>
      <if test="workdate != null">
        #{workdate,jdbcType=DATE},
      </if>
      <if test="form != null">
        #{form,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="politics != null">
        #{politics,jdbcType=VARCHAR},
      </if>
      <if test="folk != null">
        #{folk,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=VARCHAR},
      </if>
      <if test="blood != null">
        #{blood,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="homeplace != null">
        #{homeplace,jdbcType=VARCHAR},
      </if>
      <if test="seat != null">
        #{seat,jdbcType=VARCHAR},
      </if>
      <if test="eduback != null">
        #{eduback,jdbcType=VARCHAR},
      </if>
      <if test="edudegree != null">
        #{edudegree,jdbcType=VARCHAR},
      </if>
      <if test="graschool != null">
        #{graschool,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        #{speciality,jdbcType=VARCHAR},
      </if>
      <if test="gradate != null">
        #{gradate,jdbcType=DATE},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.jstu.myoffice.model.User">
    update employee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null">
        departmentId = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="departmentname != null">
        departmentName = #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="stationid != null">
        stationId = #{stationid,jdbcType=INTEGER},
      </if>
      <if test="stationname != null">
        stationName = #{stationname,jdbcType=VARCHAR},
      </if>
      <if test="employdate != null">
        employDate = #{employdate,jdbcType=DATE},
      </if>
      <if test="workdate != null">
        workDate = #{workdate,jdbcType=DATE},
      </if>
      <if test="form != null">
        form = #{form,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="politics != null">
        politics = #{politics,jdbcType=VARCHAR},
      </if>
      <if test="folk != null">
        folk = #{folk,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=VARCHAR},
      </if>
      <if test="blood != null">
        blood = #{blood,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="homeplace != null">
        homeplace = #{homeplace,jdbcType=VARCHAR},
      </if>
      <if test="seat != null">
        seat = #{seat,jdbcType=VARCHAR},
      </if>
      <if test="eduback != null">
        eduback = #{eduback,jdbcType=VARCHAR},
      </if>
      <if test="edudegree != null">
        eduDegree = #{edudegree,jdbcType=VARCHAR},
      </if>
      <if test="graschool != null">
        graSchool = #{graschool,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        speciality = #{speciality,jdbcType=VARCHAR},
      </if>
      <if test="gradate != null">
        graDate = #{gradate,jdbcType=DATE},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap" useCache="true">
    select
    <include refid="Base_Column_List" />
    from employee
    order by id asc
  </select>
  <delete id="batchDelete" flushCache="true">
    delete from employee
    where id in
    <foreach collection="array" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <select id="search" resultMap="BaseResultMap" useCache="true">
    select
    <include refid="Base_Column_List"/>
    from employee
    <where>
      <if test="id!=null">
        and id like concat('%',#{id},'%')
      </if>
      <if test="name!=null">
        and name like concat('%',#{name},'%')
      </if>
      <if test="eduback!=null">
        and eduback like concat('%',#{eduback},'%')
      </if>
    </where>
    order by id asc
  </select>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.jstu.myoffice.model.User">
    update employee
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birth = #{birth,jdbcType=DATE},
      idcard = #{idcard,jdbcType=VARCHAR},
      departmentId = #{departmentid,jdbcType=INTEGER},
      departmentName = #{departmentname,jdbcType=VARCHAR},
      stationId = #{stationid,jdbcType=INTEGER},
      stationName = #{stationname,jdbcType=VARCHAR},
      employDate = #{employdate,jdbcType=DATE},
      workDate = #{workdate,jdbcType=DATE},
      form = #{form,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      politics = #{politics,jdbcType=VARCHAR},
      folk = #{folk,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      height = #{height,jdbcType=VARCHAR},
      blood = #{blood,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      homeplace = #{homeplace,jdbcType=VARCHAR},
      seat = #{seat,jdbcType=VARCHAR},
      eduback = #{eduback,jdbcType=VARCHAR},
      eduDegree = #{edudegree,jdbcType=VARCHAR},
      graSchool = #{graschool,jdbcType=VARCHAR},
      speciality = #{speciality,jdbcType=VARCHAR},
      graDate = #{gradate,jdbcType=DATE},
      tag = #{tag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>